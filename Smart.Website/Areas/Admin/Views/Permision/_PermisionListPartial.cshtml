@model PermisionModel
@{
    Layout = null;
}

<div class="col-md-12">
    <div>
        <input type="hidden" id="role-id" value="@Model.RoleId" />
        <input type="hidden" id="role-name" value="@Model.RoleName" />
    </div>
    <table class="table">
        <thead>
            <tr>
                <th colspan="2">Name</th>
                @foreach (var role in Model.RoleList)
                {
                    <th class="check-all-role">@role.Name</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var controller in Model.ControllerList)
            {
                var indexOf = Model.ControllerList.IndexOf(controller) + 1;

                <tr class="controller">
                    <td colspan="2" class="controller-toggle" data-id="@controller.Name">@controller.Name</td>
                    @foreach (var role in Model.RoleList)
                    {
                        <td class="text-align-center">
                            <label><input class="check-role role-controller role-controller-@role.Name.ToLower()-@indexOf" data-id="@indexOf" data-role="@role.Name.ToLower()" type="checkbox" value="@role.Value"></label>
                        </td>
                    }
                </tr>
                foreach (var action in controller.ActionList)
                {
                    var index = controller.ActionList.IndexOf(action) + 1;
                    
                    <tr class="tr-action controller-@controller.Name">
                        <td width="2%">@index .</td>
                        <td>@action.Name</td>
                        @foreach (var role in Model.RoleList)
                        {
                            var check = Model.RoleGroups.Exists(x=> x.ControllerName.ToLower() == controller.Name.ToLower() 
                                                                        && x.ActionName.ToLower() == action.Name.ToLower()
                                                                        && (int)x.PermisionEnumId == int.Parse(role.Value));
                            <td class="text-align-center">
                                <label><input class="check-role check-role-action role-action-@role.Name.ToLower()-@indexOf" data-id="@indexOf" data-role="@role.Name.ToLower()" data-controller="@controller.Name" data-action="@action.Name" data-permision-id="@role.Value" type="checkbox" value="@role.Value" @(check ? "checked":"")></label>
                            </td>
                        }
                    </tr>
                }
            }
        </tbody>
    </table>

</div>

<script>
    setTimeout(function () {
        initData();
        TrackingCheckAll();
    }, 500);

    function initData() {
        $('.controller-toggle').each(function () {
            var name = $(this).data('id');
            $('.controller-' + name).animate({
                height: 'toggle'
            });
        });
    }

    function TrackingCheckAll() {
        $('.check-role-action').each(function () {
            var indexOf = $(this).data('id');
            var roleName = $(this).data('role');
            if ($('.role-action-' + roleName + '-' + indexOf + ':checked').length == $('.role-action-' + roleName + '-' + indexOf).length)
                $('table input.role-controller-' + roleName + '-' + indexOf).prop('checked', 'checked');
            else
                $('table input.role-controller-' + roleName + '-' + indexOf).prop('checked', '');
        });
    }

    $(document).ready(function () {
        $('.controller-toggle').click(function () {
            var name = $(this).data('id');
            $('.controller-' + name).animate({
                height: 'toggle'
            });
        });

        $('.role-controller').click(function () {
            var indexOf = $(this).data('id');
            var roleName = $(this).data('role');
            var idx = $(this).parent().index();
            $('table input.role-action-' + roleName + '-' + indexOf).prop('checked', this.checked);
        });

        $('.check-role-action').click(function () {
            var indexOf = $(this).data('id');
            var roleName = $(this).data('role');
            if ($('.role-action-' + roleName + '-' + indexOf + ':checked').length == $('.role-action-' + roleName + '-' + indexOf).length)
                $('table input.role-controller-' + roleName + '-' + indexOf).prop('checked', 'checked');
            else
                $('table input.role-controller-' + roleName + '-' + indexOf).prop('checked', '');
        });

        $('#popup-modal-common .btn-save-data').click(function () {
            var lstData = [];

            $('.check-role-action:checked').each(function () {
                var obj = {
                    Id: $("#role-id").val(),
                    PermisionEnumId: $(this).attr("data-permision-id"),
                    ControllerName: $(this).attr('data-controller'),
                    ActionName: $(this).attr('data-action')
                };
                lstData.push(obj);
            });

            $.ajax({
                type: "POST",
                url: '/Admin/Permision/UpdateRolePermision',
                data: { JsonPost: JSON.stringify(lstData) },
                success: function (result) {
                    MessageNotify("SAVE", "Save data success","success");
                    $('#popup-modal-common .close-modal').click();
                },
                error: function (error) {
                    MessageNotify("ERROR", error.message,"danger");
                },
                dataType: "JSON"

            });
            //var objectData = {
            //    roleId: $('#popup-modal-common #role-id').val(),
                
            //};
        });

    });

</script>
